소프트웨어 모듈이 가져야하는 세 가지 기능
1. 제대로 동작해야 한다. (== 정상적으로 동작해야 한다)
2. 변경하기 쉬워야 한다 (== 유지보수하기 쉬워야 한다)
3. 코드를 읽는 사람과 의사소통이 가능해야한다.(== 가독성이 좋아야한다)

1. 예상을 빗나가는 코드
Theater(소극장) 클래스를 보면, 관람객과 판매원이 소극장의 통제를 받는 소극적인 존재다.

현재 소극장의 코드에서는
- 소극장이 관람객의 가방을 열어보고 티켓이 있는지 확인한다.
- 소극장이 관람객의 가방을 열어보고 돈의 양을 조절하고 있다.
- 소극장이 판매원이 일하는 매표소의 티켓과 현금에 접근하고 있다.

=> 이 코드의 문제점
1. 이 코드는 "예상을 빗나가는 코드"이기 떄문에 "의사소통"이 원활하지 못하다.
소극장의 역할은 관람객을 맞이하는 것인데, 이상한 책임을 지고있다.
우리가 생각하는 상식과 너무나도 다르기에 코드를 읽는 사람과 제대로된 의사소통을 하지 못하게 되는 것.

2. 세부적인 내용들을 다 알고 있어야 한다.
각 클래스가 어떤 필드를 가지고 있는지 다 알고있어야만 의사소통을 할 수 있다. => 의사소통하기 어렵게 만든다.

3. 변경에 취약하다.
Audience와 TicketSeller 클래스를 변경할 경우, Theater도 변경해야한다.

